name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python # Set Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies including Flask
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install Flask  # Install Flask for the application
          pip install pytest  # Install pytest for testing

      # Run application.py (Flask app)
      - name: Run Flask application
        run: |
          export FLASK_APP=application.py  # Set the Flask app to run
          export FLASK_ENV=development  # Set the Flask environment to development
          flask run --host=0.0.0.0 --port=5000 &  # Run the Flask app in the background
  deploy:
    needs: build  # wait for the "build" job to get done before executing this "deploy" job

    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Deploy to GitHub Pages ðŸš€
        if: github.event_name == 'push'  # deploy only on push
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          artifact_name: web-build-artifact
